name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install UPX
      run: |
        sudo apt-get update
        sudo apt-get install -y upx-ucl

    - name: Build all platforms
      env:
        CGO_ENABLED: 0
      run: |
        # Build for all platforms
        platforms=(
          "linux/amd64:passgo-linux-amd64"
          "linux/arm64:passgo-linux-arm64"
          "darwin/amd64:passgo-darwin-amd64"
          "darwin/arm64:passgo-darwin-arm64"
          "windows/amd64:passgo-windows-amd64.exe"
        )

        for platform in "${platforms[@]}"; do
          IFS=':' read -r os_arch binary_name <<< "$platform"
          IFS='/' read -r goos goarch <<< "$os_arch"

          echo "Building $binary_name for $goos/$goarch"
          GOOS=$goos GOARCH=$goarch go build \
            -ldflags="-s -w -X main.Version=0.${{ github.run_number }} -X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.GitCommit=${{ github.sha }}" \
            -o "$binary_name" .

          if [ "$goos" != "darwin" ]; then
            echo "Optimizing $binary_name with UPX"
            upx --best --lzma "$binary_name"
          else
            echo "Skipping UPX compression for $goos/$goarch"
          fi
        done

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          passgo-linux-amd64
          passgo-linux-arm64
          passgo-darwin-amd64
          passgo-darwin-arm64
          passgo-windows-amd64.exe
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create release archive
      run: |
        mkdir -p release
        cp artifacts/binaries/* release/

    - name: Generate checksums
      run: |
        cd release
        for file in *; do
          if [ -f "$file" ]; then
            sha256sum "$file" > "$file.sha256"
          fi
        done

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## Changes
          - Automated release from commit ${{ github.sha }}
          
          ## Downloads
          Choose the appropriate binary for your operating system and architecture:
          
          ### Linux
          - `passgo-linux-amd64` - Linux x86_64
          - `passgo-linux-arm64` - Linux ARM64
          
          ### macOS
          - `passgo-darwin-amd64` - macOS Intel
          - `passgo-darwin-arm64` - macOS Apple Silicon
          
          ### Windows
          - `passgo-windows-amd64.exe` - Windows x86_64

          ## Verification
          All binaries are signed with SHA256 checksums. Verify your download:
          ```bash
          sha256sum -c <binary-name>.sha256
          ```
        files: |
          release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
